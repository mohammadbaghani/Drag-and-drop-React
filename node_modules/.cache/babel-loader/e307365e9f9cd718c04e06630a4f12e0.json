{"ast":null,"code":"import { __makeTemplateObject } from \"tslib\";\nimport { css } from 'styled-components';\nimport { B100, N30A, skeleton as skeletonColor } from './colors';\nexport var FLATTENED = '__FLATTENED__';\nexport var CHANNEL = '__ATLASKIT_THEME__';\nexport var DEFAULT_THEME_MODE = 'light';\nexport var THEME_MODES = ['light', 'dark'];\n/*\n  These theme values are expressed as functions so that if we decide to make\n  them dependent on props in the future, it wouldn't require a significant\n  refactor everywhere they are being used.\n*/\nexport var borderRadius = function () {\n  return 3;\n};\nexport var gridSize = function () {\n  return 8;\n};\nexport var fontSize = function () {\n  return 14;\n};\nexport var fontSizeSmall = function () {\n  return 11;\n};\nexport var fontFamily = function () {\n  return \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\";\n};\nexport var codeFontFamily = function () {\n  return \"'SFMono-Medium', 'SF Mono', 'Segoe UI Mono', 'Roboto Mono', 'Ubuntu Mono', Menlo, Consolas, Courier, monospace\";\n};\nexport var focusRing = function (color, outlineWidth) {\n  if (color === void 0) {\n    color = B100;\n  }\n  if (outlineWidth === void 0) {\n    outlineWidth = gridSize() / 4;\n  }\n  return \"\\n  &:focus {\\n    outline: none;\\n    box-shadow: 0px 0px 0px \" + outlineWidth + \"px \" + color + \";\\n  }\\n\";\n};\nexport var noFocusRing = function () {\n  return \"\\n  box-shadow: none;\\n\";\n};\nexport var layers = {\n  card: function () {\n    return 100;\n  },\n  dialog: function () {\n    return 300;\n  },\n  navigation: function () {\n    return 200;\n  },\n  layer: function () {\n    return 400;\n  },\n  blanket: function () {\n    return 500;\n  },\n  modal: function () {\n    return 510;\n  },\n  flag: function () {\n    return 600;\n  },\n  spotlight: function () {\n    return 700;\n  },\n  tooltip: function () {\n    return 800;\n  }\n};\nexport var visuallyHidden = function () {\n  return {\n    border: '0 !important',\n    clip: 'rect(1px, 1px, 1px, 1px) !important',\n    height: '1px !important',\n    overflow: 'hidden !important',\n    padding: '0 !important',\n    position: 'absolute !important',\n    width: '1px !important',\n    whiteSpace: 'nowrap !important'\n  };\n};\n/**\n * Deprecated Styled Components mixin.\n * Use visuallyHidden instead.\n * @deprecated\n */\nexport var assistive = function () {\n  return css(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  border: 0 !important;\\n  clip: rect(1px, 1px, 1px, 1px) !important;\\n  height: 1px !important;\\n  overflow: hidden !important;\\n  padding: 0 !important;\\n  position: absolute !important;\\n  width: 1px !important;\\n  white-space: nowrap !important;\\n\"], [\"\\n  border: 0 !important;\\n  clip: rect(1px, 1px, 1px, 1px) !important;\\n  height: 1px !important;\\n  overflow: hidden !important;\\n  padding: 0 !important;\\n  position: absolute !important;\\n  width: 1px !important;\\n  white-space: nowrap !important;\\n\"])));\n};\nexport var skeletonShimmer = function () {\n  return {\n    css: {\n      backgroundColor: skeletonColor(),\n      animationDuration: '1.5s',\n      animationIterationCount: 'infinite',\n      animationTimingFunction: 'linear',\n      animationDirection: 'alternate'\n    },\n    keyframes: {\n      from: {\n        backgroundColor: skeletonColor()\n      },\n      to: {\n        backgroundColor: N30A\n      }\n    }\n  };\n};\nvar templateObject_1;","map":{"version":3,"sources":["../../src/constants.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __makeTemplateObject } from \"tslib\";\nimport { css } from 'styled-components';\nimport { B100, N30A, skeleton as skeletonColor } from './colors';\nexport var FLATTENED = '__FLATTENED__';\nexport var CHANNEL = '__ATLASKIT_THEME__';\nexport var DEFAULT_THEME_MODE = 'light';\nexport var THEME_MODES = ['light', 'dark'];\n/*\n  These theme values are expressed as functions so that if we decide to make\n  them dependent on props in the future, it wouldn't require a significant\n  refactor everywhere they are being used.\n*/\nexport var borderRadius = function () { return 3; };\nexport var gridSize = function () { return 8; };\nexport var fontSize = function () { return 14; };\nexport var fontSizeSmall = function () { return 11; };\nexport var fontFamily = function () {\n    return \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\";\n};\nexport var codeFontFamily = function () {\n    return \"'SFMono-Medium', 'SF Mono', 'Segoe UI Mono', 'Roboto Mono', 'Ubuntu Mono', Menlo, Consolas, Courier, monospace\";\n};\nexport var focusRing = function (color, outlineWidth) {\n    if (color === void 0) { color = B100; }\n    if (outlineWidth === void 0) { outlineWidth = gridSize() / 4; }\n    return \"\\n  &:focus {\\n    outline: none;\\n    box-shadow: 0px 0px 0px \" + outlineWidth + \"px \" + color + \";\\n  }\\n\";\n};\nexport var noFocusRing = function () { return \"\\n  box-shadow: none;\\n\"; };\nexport var layers = {\n    card: function () { return 100; },\n    dialog: function () { return 300; },\n    navigation: function () { return 200; },\n    layer: function () { return 400; },\n    blanket: function () { return 500; },\n    modal: function () { return 510; },\n    flag: function () { return 600; },\n    spotlight: function () { return 700; },\n    tooltip: function () { return 800; },\n};\nexport var visuallyHidden = function () { return ({\n    border: '0 !important',\n    clip: 'rect(1px, 1px, 1px, 1px) !important',\n    height: '1px !important',\n    overflow: 'hidden !important',\n    padding: '0 !important',\n    position: 'absolute !important',\n    width: '1px !important',\n    whiteSpace: 'nowrap !important',\n}); };\n/**\n * Deprecated Styled Components mixin.\n * Use visuallyHidden instead.\n * @deprecated\n */\nexport var assistive = function () { return css(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  border: 0 !important;\\n  clip: rect(1px, 1px, 1px, 1px) !important;\\n  height: 1px !important;\\n  overflow: hidden !important;\\n  padding: 0 !important;\\n  position: absolute !important;\\n  width: 1px !important;\\n  white-space: nowrap !important;\\n\"], [\"\\n  border: 0 !important;\\n  clip: rect(1px, 1px, 1px, 1px) !important;\\n  height: 1px !important;\\n  overflow: hidden !important;\\n  padding: 0 !important;\\n  position: absolute !important;\\n  width: 1px !important;\\n  white-space: nowrap !important;\\n\"]))); };\nexport var skeletonShimmer = function () {\n    return ({\n        css: {\n            backgroundColor: skeletonColor(),\n            animationDuration: '1.5s',\n            animationIterationCount: 'infinite',\n            animationTimingFunction: 'linear',\n            animationDirection: 'alternate',\n        },\n        keyframes: {\n            from: {\n                backgroundColor: skeletonColor(),\n            },\n            to: {\n                backgroundColor: N30A,\n            },\n        },\n    });\n};\nvar templateObject_1;\n//# sourceMappingURL=constants.js.map"]},"metadata":{},"sourceType":"module"}