{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\USER\\\\Downloads\\\\ea834990-459e-4e30-b7b8-fab8ce3cf9ff\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _templateObject,\n  _templateObject2,\n  _templateObject3,\n  _templateObject4,\n  _templateObject5,\n  _templateObject6,\n  _templateObject7,\n  _templateObject8,\n  _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\ea834990-459e-4e30-b7b8-fab8ce3cf9ff\\\\src\\\\dnd\\\\styles\\\\item.js\";\nimport React from 'react';\nimport styled from '@xstyled/styled-components';\nimport { borderRadius, grid } from './constants';\nconst getBackgroundColor = (isDragging, isGroupedOver, authorColors) => {\n  if (isDragging) {\n    return authorColors.soft;\n  }\n  if (isGroupedOver) {\n    return '#EBECF0';\n  }\n  return '#FFFFFF';\n};\nconst getBorderColor = (isDragging, authorColors) => isDragging ? authorColors.hard : 'transparent';\nconst imageSize = 40;\nconst CloneBadge = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  background: #79f2c0;\\n  bottom: \", \"px;\\n  border: 2px solid #57d9a3;\\n  border-radius: 50%;\\n  box-sizing: border-box;\\n  font-size: 10px;\\n  position: absolute;\\n  right: -\", \"px;\\n  top: -\", \"px;\\n  transform: rotate(40deg);\\n  height: \", \"px;\\n  width: \", \"px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n\"])), grid / 2, imageSize / 3, imageSize / 3, imageSize, imageSize);\nconst Container = styled.a(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  border-radius: \", \"px;\\n  border: 2px solid transparent;\\n  border-color: \", \";\\n  background-color: \", \";\\n  box-shadow: \", \";\\n  box-sizing: border-box;\\n  padding: \", \"px;\\n  min-height: \", \"px;\\n  margin-bottom: \", \"px;\\n  user-select: none;\\n\\n\\n  color: #091e42;\\n\\n  &:hover,\\n  &:active {\\n    color: #091e42;\\n    text-decoration: none;\\n  }\\n\\n  &:focus {\\n    outline: none;\\n    border-color: \", \";\\n    box-shadow: none;\\n  }\\n\\n \\n  display: flex;\\n\"])), borderRadius, props => getBorderColor(props.isDragging, props.colors), props => getBackgroundColor(props.isDragging, props.isGroupedOver, props.colors), _ref => {\n  let {\n    isDragging\n  } = _ref;\n  return isDragging ? \"2px 2px 1px #A5ADBA\" : 'none';\n}, grid, imageSize, grid, props => props.colors.hard);\nconst Avatar = styled.img(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  width: \", \"px;\\n  height: \", \"px;\\n  border-radius: 50%;\\n  margin-right: auto;\\n  margin-left: auto;\\nposition:absolute;\\n  flex-shrink: 0;\\n  flex-grow: 0;\\n\"])), imageSize, imageSize);\nconst Content = styled.div(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n \\n  flex-grow: 1;\\n\\n  flex-basis: 100%;\\n\\n  display: flex;\\n  flex-direction: column;\\n\"])));\nconst BlockQuote = styled.div(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n  &::before {\\n    content: open-quote;\\n  }\\n  &::after {\\n    content: close-quote;\\n  }\\n\"])));\nconst Footer = styled.div(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n  display: flex;\\n  margin-top: \", \"px;\\n  align-items: center;\\n\"])), grid);\nconst Author = styled.small(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral([\"\\n  color: \", \";\\n  flex-grow: 0;\\n  margin: 0;\\n  background-color: \", \";\\n  border-radius: \", \"px;\\n  font-weight: normal;\\n  padding: \", \"px;\\n\"])), props => props.colors.hard, props => props.colors.soft, borderRadius, grid / 2);\nconst QuoteId = styled.small(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral([\"\\n  flex-grow: 1;\\n  flex-shrink: 1;\\n  margin: 0;\\n  font-weight: normal;\\n  text-overflow: ellipsis;\\n  text-align: right;\\n\"])));\nfunction getStyle(provided, style) {\n  if (!style) {\n    return provided.draggableProps.style;\n  }\n  return {\n    ...provided.draggableProps.style,\n    ...style\n  };\n}\nfunction QuoteItem(props) {\n  const {\n    quote,\n    isDragging,\n    isGroupedOver,\n    provided,\n    style,\n    isClone,\n    index\n  } = props;\n  return /*#__PURE__*/React.createElement(Container, Object.assign({\n    href: quote.author.url,\n    isDragging: isDragging,\n    isGroupedOver: isGroupedOver,\n    isClone: isClone,\n    colors: quote.author.colors,\n    ref: provided.innerRef\n  }, provided.draggableProps, provided.dragHandleProps, {\n    style: getStyle(provided, style),\n    \"data-is-dragging\": isDragging,\n    \"data-testid\": quote.id,\n    \"data-index\": index,\n    \"aria-label\": \"\".concat(quote.author.name, \" quote \").concat(quote.content),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Avatar, {\n    src: quote.author.avatarUrl,\n    alt: quote.author.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }), isClone ? /*#__PURE__*/React.createElement(CloneBadge, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 18\n    }\n  }, \"Clone\") : null, /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BlockQuote, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, quote.content), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Author, {\n    colors: quote.author.colors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, quote.author.name), /*#__PURE__*/React.createElement(QuoteId, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, \"id:\", quote.id))));\n}\nexport default React.memo(QuoteItem);","map":{"version":3,"names":["React","styled","borderRadius","grid","getBackgroundColor","isDragging","isGroupedOver","authorColors","soft","getBorderColor","hard","imageSize","CloneBadge","div","_templateObject","_taggedTemplateLiteral","Container","a","_templateObject2","props","colors","_ref","Avatar","img","_templateObject3","Content","_templateObject4","BlockQuote","_templateObject5","Footer","_templateObject6","Author","small","_templateObject7","QuoteId","_templateObject8","getStyle","provided","style","draggableProps","QuoteItem","quote","isClone","index","createElement","Object","assign","href","author","url","ref","innerRef","dragHandleProps","id","concat","name","content","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","avatarUrl","alt","memo"],"sources":["C:/Users/USER/Downloads/ea834990-459e-4e30-b7b8-fab8ce3cf9ff/src/dnd/styles/item.js"],"sourcesContent":["import React from 'react';\nimport styled from '@xstyled/styled-components';\nimport { borderRadius, grid } from './constants';\n\nconst getBackgroundColor = (isDragging, isGroupedOver, authorColors) => {\n  if (isDragging) {\n    return authorColors.soft;\n  }\n\n  if (isGroupedOver) {\n    return '#EBECF0';\n  }\n\n  return '#FFFFFF';\n};\n\nconst getBorderColor = (isDragging, authorColors) =>\n  isDragging ? authorColors.hard : 'transparent';\n\nconst imageSize = 40;\n\nconst CloneBadge = styled.div`\n  background: #79f2c0;\n  bottom: ${grid / 2}px;\n  border: 2px solid #57d9a3;\n  border-radius: 50%;\n  box-sizing: border-box;\n  font-size: 10px;\n  position: absolute;\n  right: -${imageSize / 3}px;\n  top: -${imageSize / 3}px;\n  transform: rotate(40deg);\n  height: ${imageSize}px;\n  width: ${imageSize}px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Container = styled.a`\n  border-radius: ${borderRadius}px;\n  border: 2px solid transparent;\n  border-color: ${(props) => getBorderColor(props.isDragging, props.colors)};\n  background-color: ${(props) =>\n    getBackgroundColor(props.isDragging, props.isGroupedOver, props.colors)};\n  box-shadow: ${({ isDragging }) => (isDragging ? `2px 2px 1px #A5ADBA` : 'none')};\n  box-sizing: border-box;\n  padding: ${grid}px;\n  min-height: ${imageSize}px;\n  margin-bottom: ${grid}px;\n  user-select: none;\n\n\n  color: #091e42;\n\n  &:hover,\n  &:active {\n    color: #091e42;\n    text-decoration: none;\n  }\n\n  &:focus {\n    outline: none;\n    border-color: ${(props) => props.colors.hard};\n    box-shadow: none;\n  }\n\n \n  display: flex;\n`;\n\nconst Avatar = styled.img`\n  width: ${imageSize}px;\n  height: ${imageSize}px;\n  border-radius: 50%;\n  margin-right: auto;\n  margin-left: auto;\nposition:absolute;\n  flex-shrink: 0;\n  flex-grow: 0;\n`;\n\nconst Content = styled.div`\n \n  flex-grow: 1;\n\n  flex-basis: 100%;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nconst BlockQuote = styled.div`\n  &::before {\n    content: open-quote;\n  }\n  &::after {\n    content: close-quote;\n  }\n`;\n\nconst Footer = styled.div`\n  display: flex;\n  margin-top: ${grid}px;\n  align-items: center;\n`;\n\nconst Author = styled.small`\n  color: ${(props) => props.colors.hard};\n  flex-grow: 0;\n  margin: 0;\n  background-color: ${(props) => props.colors.soft};\n  border-radius: ${borderRadius}px;\n  font-weight: normal;\n  padding: ${grid / 2}px;\n`;\n\nconst QuoteId = styled.small`\n  flex-grow: 1;\n  flex-shrink: 1;\n  margin: 0;\n  font-weight: normal;\n  text-overflow: ellipsis;\n  text-align: right;\n`;\n\nfunction getStyle(provided, style) {\n  if (!style) {\n    return provided.draggableProps.style;\n  }\n\n  return {\n    ...provided.draggableProps.style,\n    ...style,\n  };\n}\n\nfunction QuoteItem(props) {\n  const { quote, isDragging, isGroupedOver, provided, style, isClone, index } = props;\n\n  return (\n    <Container\n      href={quote.author.url}\n      isDragging={isDragging}\n      isGroupedOver={isGroupedOver}\n      isClone={isClone}\n      colors={quote.author.colors}\n      ref={provided.innerRef}\n      {...provided.draggableProps}\n      {...provided.dragHandleProps}\n      style={getStyle(provided, style)}\n      data-is-dragging={isDragging}\n      data-testid={quote.id}\n      data-index={index}\n      aria-label={`${quote.author.name} quote ${quote.content}`}\n    >\n      <Avatar src={quote.author.avatarUrl} alt={quote.author.name} />\n      {isClone ? <CloneBadge>Clone</CloneBadge> : null}\n      <Content>\n        <BlockQuote>{quote.content}</BlockQuote>\n        <Footer>\n          <Author colors={quote.author.colors}>{quote.author.name}</Author>\n          <QuoteId>\n            id:\n            {quote.id}\n          </QuoteId>\n        </Footer>\n      </Content>\n    </Container>\n  );\n}\n\nexport default React.memo(QuoteItem);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}